/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */html{-webkit-text-size-adjust:100%;line-height:1.15}body{margin:0}main{display:block}h1{font-size:2em;margin:.67em 0}hr{box-sizing:content-box;height:0;overflow:visible}pre{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;text-decoration:underline;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}code,kbd,samp{font-family:monospace,monospace;font-size:1em}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,input{overflow:visible}button,select{text-transform:none}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:1px dotted ButtonText}fieldset{padding:.35em .75em .625em}legend{box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}progress{vertical-align:baseline}textarea{overflow:auto}[type=checkbox],[type=radio]{box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}details{display:block}summary{display:list-item}[hidden],template{display:none}html{box-sizing:border-box;font-size:62.5%}*,:after,:before{box-sizing:inherit}body{font-family:Montserrat,sans-serif;font-size:1.6rem}body.fijar-body{overflow:hidden}@media (min-width:768px){body.body-scroll{padding-top:9.675rem}}p{color:#000;font-size:2rem;line-height:1.5}.contenedor{margin:0 auto;max-width:120rem;width:95%}a{text-decoration:none}h1,h2,h3{margin:0 0 5rem}h1{font-size:4rem}h2{font-size:3.6rem}h3{font-size:3rem}img{display:block;height:auto;max-width:100%;width:100%}.header{background-color:#4cbbb3}@media (min-width:768px){.header.fijo{box-shadow:.1rem .2rem .3rem #333;left:0;position:fixed;top:0;width:100%}}.header h1{color:#fff;text-align:center}@media (min-width:768px){.header h1{margin:0}}.header .contenido-header{padding:2rem}@media (min-width:768px){.header .contenido-header{align-items:center;display:flex;justify-content:space-between}.navegacion-principal{display:flex;gap:2rem}}.navegacion-principal a{color:#fff;display:block;font-size:2.4rem;margin-bottom:1rem;text-align:center}@media (min-width:768px){.navegacion-principal a{margin:0}}.navegacion-principal a:hover{color:#fef46d}.video{max-height:70rem;min-height:50rem;overflow:hidden;position:relative}.video .overlay{align-items:center;background:#8a01e3;background:linear-gradient(270deg,rgba(138,1,227,.5),rgba(255,0,132,.3));display:flex;flex-direction:column;height:100%;justify-content:center;position:absolute;width:100%}.video video{display:block}@media (min-width:992px){.video video{width:100%}}.contenido-video{z-index:10}.contenido-video h2{color:#fff;font-size:7rem;margin:0}.contenido-video p{background-color:#f53756;color:#fff;display:inline-block;font-size:2.4rem;font-weight:700;margin:0;padding:1rem 2rem}.sobre-festival{padding:5rem 0}@media (min-width:768px){.sobre-festival{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.contenido-festival{display:flex;flex-direction:column;justify-content:center;margin-top:5rem}@media (min-width:768px){.contenido-festival{margin-top:0}}.contenido-festival h2{margin-bottom:2rem}.contenido-festival .fecha{color:#f53756;font-weight:700}.lineup{background-color:#f53756;padding:5rem 0}.lineup h3,.lineup p{color:#fff;text-align:center}.lineup .dia{margin:5rem 0;text-transform:uppercase}@media (min-width:768px){.escenarios-contenedor{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.escenarios-contenedor p{color:#000}.escenarios-contenedor .escenario{padding-top:2rem}.escenarios-contenedor .escenario p:after{background-position:50%;background-repeat:no-repeat;background-size:15rem;content:"";display:block;height:10rem;margin:2rem auto 0;width:20rem}.edm .nombre-escenario:after{background-image:url(../img/icono_edm.png)}.rock .nombre-escenario:after{background-image:url(../img/icono_rock.png)}.calendario{list-style:none;margin:0;padding:0}.calendario li{font-weight:700;padding:2.5rem}.calendario li span{font-weight:400}.bg-amarillo{background-color:#fef46d}.bg-amarillo li:nth-child(odd){background-color:#fdee21}.bg-verde{background-color:#4cbbb3}.bg-verde li:nth-child(odd){background-color:#3a9a93}.galeria{padding:5rem 0}.galeria h3{text-align:center}.galeria-imagenes{display:grid;gap:2rem;grid-template-columns:repeat(2,1fr);list-style:none;margin:0;padding:0}@media (min-width:480px){.galeria-imagenes{display:grid;gap:2rem;grid-template-columns:repeat(3,1fr)}}@media (min-width:768px){.galeria-imagenes{display:grid;gap:2rem;grid-template-columns:repeat(4,1fr)}}@media (min-width:992px){.galeria-imagenes{display:grid;gap:2rem;grid-template-columns:repeat(6,1fr)}}.overlay{background-color:rgba(0,0,0,.55);bottom:0;display:grid;height:100%;left:0;place-items:center;position:fixed;right:0;top:0;width:100%}.overlay picture{display:block;max-width:80rem}.btn-cerrar{background-color:#fff;border-radius:50%;color:#000;display:grid;font-weight:700;height:4rem;place-items:center;width:4rem}.btn-cerrar:hover{cursor:pointer}.boletos{padding:5rem 0}.boletos h3{color:#fff;margin-bottom:2rem;text-align:center}@media (min-width:768px){.boletos .contenedor-boletos{display:grid;gap:5rem;grid-template-columns:repeat(2,1fr)}}.pase{color:#000}.pase .nombre-pase{font-size:2.8rem;text-align:center}.pase-footer,.pase-header{padding:.5rem}.pase-footer p,.pase-header p{color:#fff;margin:0;text-align:center}.pase-header{background-color:#f53756}.pase-header p{font-size:1.6rem;text-transform:uppercase}.pase-body{background-color:#fff}.pase-body ul{list-style:none;margin:0;padding:0}.pase-body ul :nth-child(odd),.pase-body ul li{background-color:#fff;border-bottom:1px solid #e1e1e1;padding:1rem}.pase-footer{background-color:#752f97}.pase-footer p{font-size:2.4rem;font-weight:700}.site-footer{background-color:#f53756;padding:1rem}.site-footer p{color:#fff;margin:0;text-align:center}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
